/*
* Copyright (c) 2005-2006 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource file for Device Manager UI
*
*/


//  RESOURCE IDENTIFIER
NAME    DMUI // 4 letter ID

//  INCLUDES
#include <bldvariant.hrh>
#include <eikon.rh>
#include <uikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <avkon.mbg>
#include <avkon.hrh>
#include <AvkonIcons.hrh>
#include <avkon.loc>
#include <CommonDialogs.rh>
#include <CommonDialogs.hrh>

#include <nsmldmsync.loc>
#include <nsmldmsyncfota.loc>
#include "NSmlDMSyncUi.hrh"
#include "NSmlDMUIDefines.h"

#include <appinfo.rh>

//  RESOURCE DEFINITIONS 

RESOURCE RSS_SIGNATURE { }

RESOURCE TBUF { buf= "NSmlDMSync"; }

RESOURCE EIK_APP_INFO
  {
  status_pane = r_nsmldm_status_pane; //r_smlsync_status_pane;
  hotkeys     = r_smlsync_hotkeys;
  }

//
// AIF icons/files
//
RESOURCE LOCALISABLE_APP_INFO r_nsmldmsync_localisable_app_info
    {
    short_caption = qtn_apps_updates_title;
    caption_and_icon = 
    CAPTION_AND_ICON_INFO
        {
        caption = qtn_apps_updates_title;

    #ifdef __SCALABLE_ICONS
        number_of_icons = 1;
        icon_file = "Z:\\resource\\apps\\NSmlDMSync_aif.mif";
    #else
        number_of_icons = 2;
        icon_file = "Z:\\resource\\apps\\NSmlDMSync.mbm";
    #endif  // __SCALABLE_ICONS
        };
    }

//----------------------------------------------------
//
//  The status pane for device manager application
//
//----------------------------------------------------
//
RESOURCE STATUS_PANE_APP_MODEL r_nsmldm_status_pane
    {
    panes =
        {
        SPANE_PANE
            {
            id       = EEikStatusPaneUidNavi;
            type     = EAknCtNaviPane;
            resource = r_nsmldm_navi_decorator;
            }
        };
    }


//----------------------------------------------------
//
//  The navi decorator for device manager application
//  Defines application views tabs
//
//----------------------------------------------------
//

//----------------------------------------------------
//
//  The navi decorator for device manager application
//  Defines application views tabs
//
//----------------------------------------------------
//
RESOURCE NAVI_DECORATOR r_nsmldm_navi_decorator
    {
    type    = ENaviDecoratorControlNone;
    }

// -------------------------------------------------------
//                   MSK Enabled CBA Resources
// -------------------------------------------------------


//CBA for FOTA Updates view and Server profiles view
RESOURCE CBA r_nsml_fota_profiles_view_msk_options_exit_contextoptions
   {
	flags = 0;
    buttons = 
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyExit; txt = text_softkey_exit; },
        CBA_BUTTON { id = EAknSoftkeyContextOptions; txt = text_softkey_option; }
        };

   }
   

   RESOURCE CBA r_cp_nsml_fota_profiles_view_msk_options_back_contextoptions
   {
	flags = 0;
    buttons = 
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON { id = EAknSoftkeyContextOptions; txt = text_softkey_option; }
        };

   }



RESOURCE CBA r_nsml_profiles_view_msk_options_back_contextoptions
{
	flags = 0;
    buttons = 
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON { id = EAknSoftkeyContextOptions; txt = text_softkey_option; }
        };
}


//CBA for FOTA Settings & Server profile settings Dialog
RESOURCE CBA r_nsml_fota_profiles_settings_msk_options_back__change
   {
	flags = 0;
    buttons = 
        {
        CBA_BUTTON { id = EAknSoftkeyOptions; txt = text_softkey_option; },
        CBA_BUTTON { id = EAknSoftkeyBack; txt = text_softkey_back; },
        CBA_BUTTON { id = EAknSoftkeyChange; txt = qtn_msk_change; }
        };
   }


//CBA for Authentication dialog   
RESOURCE CBA r_nsml_profiles_authdialog_softkeys
  {
   buttons =
        {
        CBA_BUTTON 
            {
            id = EAknSoftkeySave; 
            txt = text_softkey_save;
            },
        CBA_BUTTON 
            {
            id = EAknSoftkeyBack;
            txt = text_softkey_back; 
            },
        CBA_BUTTON 
            {
            id = EAknSoftkeySave; 
            txt = text_softkey_save; 
            }    
            
        };
	
  }
   
 

// -----------------------------------------------------------------------------
//   
// r_smlsync_fota_view
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_VIEW r_smlsync_fota_view
    {
    cba = r_nsml_fota_profiles_view_msk_options_exit_contextoptions;
    menubar = r_smlsync_menubar_fota_view;
    }
// -----------------------------------------------------------------------------
//   
// control panel FOTA view
//
// -----------------------------------------------------------------------------
//

RESOURCE AVKON_VIEW r_cp_smlsync_fota_view
    {
    cba = r_cp_nsml_fota_profiles_view_msk_options_back_contextoptions;
    menubar = r_smlsync_menubar_fota_view;
    }

//----------------------------------------------------
//   
//    r_smlsync_menubar_fota_view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_smlsync_menubar_fota_view
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_smlsync_menu_common;    txt = ""; },
      MENU_TITLE { menu_pane = r_smlsync_menu_fota_view; txt = ""; }
      };
  }

//----------------------------------------------------
//   
//    r_smlsync_contxt_menubar_fota_view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_smlsync_contxt_menubar_fota_view
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_smlsync_contxt_menu_fota_view; txt = ""; }
      };
  }

//----------------------------------------------------
//   
//    r_smlsync_menu_fota_view
//    Fota view menu items
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_smlsync_menu_fota_view	
    {
    items =
        {
        MENU_ITEM { command = ENSmlMenuCmdFotaContinue;  txt = qtn_fota_options_continue_update; },
        MENU_ITEM { command = ENSmlMenuCmdFotaInstall;  txt = qtn_fota_options_install_update; },
        MENU_ITEM { command = ENSmlMenuCmdFotaCheck;    txt = qtn_fota_options_check_updates; },
        MENU_ITEM { command = ENSmlMenuCmdFotaServers;    txt = qtn_dm_options_servers; },
        MENU_ITEM { command = ENSmlMenuCmdFotaSettings; txt = qtn_fota_options_update_settings; }
        };
    }

//----------------------------------------------------
//   
//    r_smlsync_contxt_menu_fota_view
//    Fota view context menu items
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_smlsync_contxt_menu_fota_view	
    {
    items =
        {
        MENU_ITEM { command = ENSmlMenuCmdFotaContinue;  txt = qtn_fota_options_continue_update; },
        MENU_ITEM { command = ENSmlMenuCmdFotaInstall;  txt = qtn_fota_options_install_update; },
        MENU_ITEM { command = ENSmlMenuCmdFotaCheck;    txt = qtn_fota_options_check_updates; }
        };
    }

//----------------------------------------------------
//   
//    r_fota_menubar_settings
//    Settings view menu
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_fota_menubar_settings
    {
    titles =
        { 
        MENU_TITLE { menu_pane = r_smlsync_menu_common; txt = ""; },
        MENU_TITLE { menu_pane = r_fota_menu_settings;  txt = ""; }
        };
    }

//----------------------------------------------------
//   
//    r_fota_menu_settings
//    Fota settings dialog specific menu items
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_fota_menu_settings	
    {
    items =
        {
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdFotaSettChange; 
            txt = qtn_options_change; 
            flags = EEikMenuItemSpecific;
            }
        };
    }


//----------------------------------------------------
// r_nsml_fota_settings_dialog
// Fota settings dialog
//
//----------------------------------------------------
//
RESOURCE DIALOG r_nsml_fota_settings_dialog
    {
    flags = EEikDialogFlagWait | EEikDialogFlagFillAppClientRect | EEikDialogFlagNotifyEsc;
    buttons = r_nsml_fota_profiles_settings_msk_options_back__change;
    items =
        {
        DLG_LINE
            {
            type = EAknCtSettingListBox;
            itemflags = EEikDlgItemTakesEnterKey;
            id = ENSmlFotaSettList;
            control = LISTBOX
                {
                flags = 0;
                };            
            }
        };
    }


// -----------------------------------------------------------------------------
//   
// r_smlsync_profiles_view
//
// -----------------------------------------------------------------------------
//
RESOURCE AVKON_VIEW r_smlsync_profiles_view
    {
    cba = r_nsml_profiles_view_msk_options_back_contextoptions;
    menubar = r_smlsync_menubar_profiles_view;
    }


//----------------------------------------------------
//   
//    r_smlsync_hotkeys
//
//----------------------------------------------------
//
RESOURCE HOTKEYS r_smlsync_hotkeys
    {
    control =
        {
        HOTKEY { command = EAknCmdExit; key = 'e'; }
        };
    }

//----------------------------------------------------
//   
//    r_smlsync_menubar_profiles_view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_smlsync_menubar_profiles_view
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_smlsync_menu_common;        txt = ""; },
      MENU_TITLE { menu_pane = r_smlsync_menu_profiles_view; txt = ""; }
      };
  }

//----------------------------------------------------
//   
//    r_smlsync_contxt_menubar_profiles_view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_smlsync_contxt_menubar_profiles_view
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_smlsync_contxt_menu_profiles_view; txt = ""; }
      };
  }

//----------------------------------------------------
//   
//    r_context_menu_empty
//    Main view empty context sensitive view
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_context_menu_empty
  {
  items =
    {
    MENU_ITEM 
      { 
      command = ENSmlMenuCmdNewProfile; 
      txt = qtn_dm_opt_profile_new; 
      }
    };
  }

//----------------------------------------------------
//   
//    r_smlsync_contxt_menu_profiles_view
//    Main view context sensitive view
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_smlsync_contxt_menu_profiles_view
    {
    items =
        {
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdStartSync; 
            txt = qtn_dm_opt_connect; 
            },
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdNewProfile; 
            txt = qtn_dm_opt_server_new;
            },
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdOpenSettings; 
            txt = qtn_dm_opt_server_edit;
            },
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdOpenLog; 
            txt = qtn_dm_opt_profile_log; 
            }
        };
    }

//----------------------------------------------------
//   
//    r_smlsync_menu_common
//    Common menu items
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_smlsync_menu_common	
    {
    items =
        {
        MENU_ITEM { command = EAknCmdHelp; txt = qtn_options_help; },
        MENU_ITEM { command = EEikCmdExit;          txt = qtn_options_exit; }
        };
    }

//----------------------------------------------------
//   
//    r_smlsync_menu_profiles_view
//    Profiles view menu items
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_smlsync_menu_profiles_view	
    {
	items =
        {
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdStartSync;  
            txt = qtn_dm_opt_connect; 
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdNewProfile; 
            txt = qtn_dm_opt_server_new; 
            },
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdOpenSettings;  
            txt = qtn_dm_opt_server_edit;
            flags = EEikMenuItemSpecific; 
            },
        MENU_ITEM 
            { 
            command = ENSmlMenuCmdEraseProfile;
            txt = qtn_dm_opt_server_delete; 
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM 
            {
            command = ENSmlMenuCmdOpenLog; 
            txt = qtn_dm_opt_profile_log; 
            flags = EEikMenuItemSpecific;
            }
        };
    }

// -----------------------------------------------------------------------------
//   
//    r_sml_confirmation_query
//    General confirmation query resource.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_sml_confirmation_query
    { 
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {
                layout = EConfirmationLayout;
                };
            }
        };
    }


// -----------------------------------------------------------------------------
//   
//    r_sml_wait_note
//    General wait note resource.
//
// -----------------------------------------------------------------------------
//
RESOURCE DIALOG r_sml_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items = 
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = ENSmlWaitNote;
            control = AVKON_NOTE 
                {
                layout = EWaitLayout;
                };
            }
        };
    } 

//----------------------------------------------------
//   
//    r_settings_menu_bar
//    Menubar and Menupane of the Settings view
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_settings_menu_bar
    {
    titles = 
        { 
        MENU_TITLE { menu_pane = r_settings_menu; txt = ""; }
        };
    }

//----------------------------------------------------
//   
//    r_settings_menu
//    Settings view menu
//
//----------------------------------------------------
//
RESOURCE MENU_PANE r_settings_menu
    {
    items =
        {
        MENU_ITEM 
            {
            command = ENSmlSettChange; 
            txt = qtn_options_change; 
            flags = EEikMenuItemSpecific;
            },
        MENU_ITEM 
            {
            command = EAknCmdHelp;
            txt = qtn_options_help; 
            },
        MENU_ITEM 
            { 
            command = ENSmlSettExit; 
            txt = qtn_options_exit;
            }        
        };
    }

//----------------------------------------------------
// r_nsml_setting_dialog
// Content setting dialog
//
//----------------------------------------------------
//
RESOURCE DIALOG r_nsml_setting_dialog
  {
  flags = EEikDialogFlagNoDrag | EEikDialogFlagNoTitleBar | EEikDialogFlagFillAppClientRect | 
        EEikDialogFlagCbaButtons | EEikDialogFlagModeless;
  buttons = r_nsml_fota_profiles_settings_msk_options_back__change;
  items =
        {
        DLG_LINE
            {
            type = EAknCtSettingListBox;
            itemflags = EEikDlgItemTakesEnterKey;
            id = ENSmlSettingList;
            control = LISTBOX
              {
              flags = EAknListBoxMultiselectionList;
              height = 11;
              width = 80;
              };            
            }
        };
  }

//----------------------------------------------------
//   
//    r_settings_profilemenu
//    Settings view menu
//
//----------------------------------------------------
//
RESOURCE MENU_BAR r_settings_profilemenu
    {
    titles =
        { 
        MENU_TITLE { menu_pane = r_settings_menu; txt =""; }
        };
    }


//----------------------------------------------------
//   
//    r_smlsync_status_pane
//    Sync statuspane with overridden title and icon
//
//----------------------------------------------------
//
RESOURCE STATUS_PANE_APP_MODEL r_smlsync_status_pane
    {
    panes =
        {
        SPANE_PANE
            { 
            id = EEikStatusPaneUidTitle;
            type = EAknCtTitlePane;
            resource = r_overridden_smlsync;
            }
        };
    }

//----------------------------------------------------
//   
//    r_overridden_smlsync
//    Application title
//
//----------------------------------------------------
//
RESOURCE TITLE_PANE r_overridden_smlsync
    {
    txt = qtn_apps_dm_title;
    } 

//----------------------------------------------------
//   
//    r_startquery_note
//    Used at app start, if there aren't any profiles,to
//    prompt for "Create\nnew profile?"
//    Used in Main view delete profile prompt "Delete?"   
//
//----------------------------------------------------
//
RESOURCE DIALOG r_startquery_note
  { 
  flags = EGeneralQueryFlags;
  buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
  items=
    {
    DLG_LINE
      {
      type = EAknCtQuery;
      id = EGeneralQuery;
      control = AVKON_CONFIRMATION_QUERY
        {
        layout = EConfirmationLayout;
        };
      }
    };
  } 

//----------------------------------------------------
//   
//    r_dmalertquery_note
//    used in confirmation notes After profile deletion
//
//----------------------------------------------------  
//
RESOURCE DIALOG r_dmalertquery_note
  { 

  flags = EAknDialogGenericNoteFlags | EEikDialogFlagWait;
  buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
  items=
    {
    DLG_LINE
      {
      type = EAknCtQuery;
      id = EGeneralNote;
      control =  AVKON_CONFIRMATION_QUERY 
        { 
        layout = EConfirmationLayout;
        label = "Testing";
        bmpfile = AVKON_ICON_FILE;
        bmpid = EMbmAvkonQgn_note_query;
        bmpmask = EMbmAvkonQgn_note_query_mask;
        };
      }
    };
  }

//----------------------------------------------------
//   
//    r_dmnotifyquery_note
//    used in confirmation notes After profile deletion
//
//----------------------------------------------------  
//
RESOURCE DIALOG r_dmnotifyquery_note
  {
  flags = EAknWaitNoteFlags; // if modal, use EEikDialogFlagWait 
  buttons = R_AVKON_SOFTKEYS_EMPTY;
    items=
    {
    DLG_LINE
      {
      type = EAknCtNote;
      id = EGeneralNote;
      control =  AVKON_NOTE 
                { 
                layout = EGeneralLayout;
                singular_label = "RSS teksti";
                //bmpfile = AVKON_ICON_FILE;
                imageid = EMbmAvkonQgn_note_info_5;
                imagemask = EMbmAvkonQgn_note_info_5_mask;
                };
      }
    };
  }

//----------------------------------------------------
//   
//    r_nsml_settings_text_editor
//    Editor for text setting page
//
//----------------------------------------------------  
//
RESOURCE EDWIN r_nsml_settings_text_editor
  {
  flags = 0;
  width = 9;
  lines = 5;
  maxlength = KNSmlMaxProfileNameLength;
  default_input_mode = EAknEditorAlphaInputMode;
  flags  =  EEikEdwinNoLineOrParaBreaks;
  avkon_flags = 0;
  }

//----------------------------------------------------
//   
//    r_nsml_settings_text
//    Text setting page
//
//----------------------------------------------------  
//
RESOURCE AVKON_SETTING_PAGE r_nsml_settings_text
  {
  number = EAknSettingPageNoOrdinalDisplayed;
  label = "Page 1";
  type = EEikCtEdwin;
  softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
  invalid_contents_softkey_resource = R_AVKON_SOFTKEYS_CANCEL;
  editor_resource_id = r_nsml_settings_text_editor;
  }

//----------------------------------------------------
//   
//    r_setting_pwd_editor
//    Editor for secret setting page
//
//----------------------------------------------------  
//
RESOURCE SECRETED r_setting_pwd_editor
  {
  num_letters = KNSmlMaxPasswordLength;
  }

//----------------------------------------------------
//   
//    r_setting_password
//    Setting page for secret text editor
//
//----------------------------------------------------  
//
RESOURCE AVKON_SETTING_PAGE r_setting_password
  { 
  number = EAknSettingPageNoOrdinalDisplayed;
  label =  "Password";
  type = EEikCtSecretEd;
  softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
  invalid_contents_softkey_resource = R_AVKON_SOFTKEYS_CANCEL;
  editor_resource_id = r_setting_pwd_editor;
  }

//----------------------------------------------------
//   
//    r_setting_integer
//    Editor for number setting page
//
//----------------------------------------------------  
//
RESOURCE AVKON_INTEGER_EDWIN r_setting_integer
  {
  maxlength = 5;
  min = 1;
  max = 65535;
  }

//----------------------------------------------------
//   
//    r_settings_number
//    Setting page for number settings
//
//----------------------------------------------------  
//
RESOURCE AVKON_SETTING_PAGE r_settings_number
  {
  number = EAknSettingPageNoOrdinalDisplayed;
  type = EAknCtIntegerEdwin;
  softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
  invalid_contents_softkey_resource = R_AVKON_SOFTKEYS_CANCEL;
  editor_resource_id = r_setting_integer;
  }

//----------------------------------------------------
//   
//    r_setting_app_listbox
//    Listbox resource for Radio setting page
//
//----------------------------------------------------  
//
RESOURCE LISTBOX r_setting_app_listbox 
  {
  flags = 0x0001 ;
  }

//----------------------------------------------------
//   
//    r_settings_radio
//    Radiobutton setting page
//
//----------------------------------------------------  
//
RESOURCE AVKON_SETTING_PAGE r_settings_radio
  { 
  number = EAknSettingPageNoOrdinalDisplayed;
  softkey_resource = R_AVKON_SOFTKEYS_OK_CANCEL__OK;
  type =  EAknSetListBox;
  editor_resource_id =  r_setting_app_listbox;
  }

//----------------------------------------------------
//
// r_progress_note
// shows the synchronisation progress
//
//----------------------------------------------------
//
RESOURCE DIALOG r_progress_note
  {
  flags = EAknProgressNoteFlags;
  buttons = R_AVKON_SOFTKEYS_CANCEL;
  items= 
    {
    DLG_LINE
      {
      type = EAknCtNote;
      id = ENSmlProgressNote;
      control = AVKON_NOTE 
        {
        animation = R_QGN_GRAF_WAIT_BAR_ANIM;
        layout = EProgressLayout;
        singular_label =  "\n \n \n";
        };
      }
    };
  } 

//----------------------------------------------------
//
// r_nsmldm_authdialog
// Authentication dialog for entering username and password.
//
//----------------------------------------------------
//
RESOURCE DIALOG r_nsmldm_authdialog
  {
  flags = EGeneralQueryFlags;
  buttons = r_nsml_profiles_authdialog_softkeys;
  items=
    {
    DLG_LINE
      {
      type = EAknCtMultilineQuery;
      id = EMultilineFirstLine;
      control = AVERELL_DATA_QUERY
        { 
        layout = EMultiDataFirstEdwin;
        label = qtn_dm_conf_query_username;
        control = EDWIN
          {
          maxlength = KNSmlMaxUsernameLength;
          };
        };
      },
    DLG_LINE
      {
      type = EAknCtMultilineQuery;
      id = EMultilineSecondLine;
      control =  AVERELL_DATA_QUERY 
        { 
          layout = EMultiDataSecondSecEd;
          label = qtn_dm_conf_query_password;
          control = SECRETED
	          {
	          num_letters = KNSmlMaxPasswordLength;
	          };
        };
      }
    };
  }

//----------------------------------------------------
//
// r_fota_check_wait_note
//
//----------------------------------------------------
//
RESOURCE DIALOG r_fota_check_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = ENSmlWaitNote;
            control = AVKON_NOTE 
				{
                layout = EWaitLayout;
                singular_label = qtn_fota_wait_checking_update;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
				};
			}
		};
	} 

//----------------------------------------------------
//   
//    r_smlsync_softkeys_options_cancel
//    LeftSoftKey Select, RightSofKey Cancel (Context menu)
//
//----------------------------------------------------  
//
RESOURCE CBA r_smlsync_softkeys_options_cancel
    {
    buttons =
        {
        CBA_BUTTON 
            {
            id = ENSmlSyncSelect; 
            txt = text_softkey_select;
            },
        CBA_BUTTON 
            {
            id = ENSmlSyncCancel;
            txt = text_softkey_cancel; 
            }
        };
    }

////////////////////////////////////////////////////
//  Strings
//

STRUCT STRING
  {
  LTEXT text;
  }


RESOURCE TBUF r_sml_profiles_title                           { buf = qtn_dm_title_servers; }
		

RESOURCE TBUF r_sml_app_title                           { buf = qtn_apps_dm_title; }

RESOURCE TBUF64 r_qtn_sml_main_sync_last                { buf = qtn_dm_sync_last; }
RESOURCE TBUF64 r_sml_main_notsynced                    { buf = qtn_dm_not_configured; }
RESOURCE TBUF128 r_sml_main_noprofiles                  { buf = qtn_dm_empty_no_servers_primary_text; }
RESOURCE TBUF128 r_sml_main_noprofiles_sec_txt          { buf = qtn_dm_empty_no_servers_secondary_text; }
RESOURCE TBUF256 r_sml_appui_note_text_del              { buf = qtn_dm_conf_server_delete; } 
RESOURCE TBUF256 r_sml_appui_note_text_new              { buf = qtn_dm_conf_new_server; }
RESOURCE TBUF256 r_qtn_sml_appui_copy                   { buf = qtn_dm_conf_server_copy_defaults; }
RESOURCE TBUF256 r_qtn_sml_name_exists                  { buf = qtn_dm_conf_set_user_name; }
RESOURCE TBUF256 r_nsml_settings_save_anyway            { buf = qtn_dm_conf_server_settings_missing; }
RESOURCE TBUF r_qtn_sml_sync_app_invalid_iap            { buf = qtn_dm_conf_ap_setting; }
RESOURCE TBUF r_qtn_sml_conf_startquery                 { buf = qtn_dm_conf_connection; }
RESOURCE TBUF r_qtn_sml_conf_allowquery                 { buf = qtn_dm_conf_activation_dm; }
RESOURCE TBUF r_qtn_sml_conf_activequery                { buf = qtn_dm_conf_activation_server; }
RESOURCE TBUF r_qtn_dm_conf_set_server_id               { buf = qtn_dm_conf_change_server_id; }
RESOURCE TBUF r_qtn_dm_conf_set_dup_server_id           { buf = qtn_dm_conf_set_dup_server_id; }
RESOURCE TBUF r_qtn_dm_query_accept_configuration       { buf = qtn_dm_query_accept_configuration; }
RESOURCE TBUF r_qtn_sync_cancelled                      { buf = qtn_dm_note_end_cancelled; }

RESOURCE TBUF40 r_syncstatus_sync_conn                  { buf = qtn_dm_note_connecting; }
RESOURCE TBUF40 r_syncstatus_sync_init                  { buf = qtn_dm_note_initialising; }
RESOURCE TBUF r_syncstatus_sync_send                    { buf = qtn_dm_note_processing; }
RESOURCE TBUF40 r_syncstatus_sync_recv                  { buf = qtn_dm_note_receiving; }
RESOURCE TBUF40 r_syncstatus_sync_comp                  { buf = qtn_dm_note_finalising; }
RESOURCE TBUF40 r_syncstatus_sync_disc                  { buf = qtn_dm_note_disconnecting; }
RESOURCE TBUF40 r_syncstatus_sync_fin                   { buf = qtn_dm_note_end_done; }
RESOURCE TBUF40 r_syncstatus_err                        { buf = qtn_dm_note_end_error; }
RESOURCE TBUF40 r_syncstatus_canc                       { buf = qtn_dm_note_end_cancelling; }
RESOURCE TBUF40 r_syncstatus_sync_fin_canc              { buf = qtn_dm_note_end_cancelled; }

RESOURCE TBUF64 r_sml_log_synclog_title                 { buf = qtn_dm_query_hdr_conf_log; }
RESOURCE TBUF32 r_qtn_sml_log_server                    { buf = qtn_dm_log_remote_server; }

RESOURCE TBUF40 r_qtn_sml_log_ok                        { buf = qtn_dm_log_status_complete; }
RESOURCE TBUF40 r_qtn_sml_log_cancelled                 { buf = qtn_dm_log_status_cancelled; }
RESOURCE TBUF40 r_qtn_sml_log_err                       { buf = qtn_dm_log_status_error; }

RESOURCE TBUF128 r_sml_settings_title                   { buf = qtn_dm_title_server_settings; }
RESOURCE TBUF64 r_qtn_apps_newprofile                   { buf = qtn_dm_default_server_name; }
RESOURCE TBUF64 r_qtn_apps_emptyprofile                 { buf = qtn_dm_empty_server_name; }
RESOURCE TBUF64 r_qtn_sml_set_val_field_none            { buf = qtn_selec_setting_compulsory; }
RESOURCE TBUF64 r_qtn_sml_set_val_hostaddr_field_none   { buf = qtn_selec_setting_compulsory; }
RESOURCE TBUF r_qtn_invalid_uri                         { buf = qtn_dm_log_err_uriinvalid; }

// ask always
RESOURCE TBUF64 r_qtn_dm_set_always_ask   { buf = qtn_dm_sett_always_ask; }

//formatting strings for setting items
RESOURCE TBUF r_qtn_sml_settingrowitem                  { buf = "\t%0U\t\t%1U\t"; }
RESOURCE TBUF r_qtn_sml_settingrowitem_mand             { buf = "\t%0U\t\t%1U\t*"; }

//error note for locked setting items
RESOURCE TBUF r_qtn_dm_info_note_locked_setting		{ buf = qtn_selec_protected_setting; }

//error note for client authentication in progress view
RESOURCE TBUF r_qtn_nsml_log_err_clientauth             { buf = qtn_dm_log_err_clientauth; }
RESOURCE TBUF r_qtn_numberdata                          { buf = "%N"; }

RESOURCE TBUF r_qtn_dm_log_err_systemerror              { buf = qtn_dm_log_err_systemerror; }
RESOURCE TBUF r_qtn_dm_log_err_servererror              { buf = qtn_dm_log_err_servererror; }
RESOURCE TBUF r_qtn_dm_log_err_protocol                 { buf = qtn_dm_log_err_protocol; }
RESOURCE TBUF r_qtn_dm_log_err_cmdnotsupported          { buf = qtn_dm_log_err_cmdnotsupported; }
RESOURCE TBUF r_qtn_dm_log_err_versionnotsupported      { buf = qtn_dm_log_err_versionnotsupported; }
RESOURCE TBUF r_qtn_dm_log_err_contentnotsupported      { buf = qtn_dm_log_err_contentnotsupported; }
RESOURCE TBUF r_qtn_dm_log_err_clientauth               { buf = qtn_dm_log_err_clientauth; }
RESOURCE TBUF r_qtn_dm_log_err_servertauth              { buf = qtn_dm_log_err_servertauth; }
RESOURCE TBUF r_qtn_dm_log_err_serverbusy               { buf = qtn_dm_log_err_serverbusy; }
RESOURCE TBUF r_qtn_dm_log_err_servernotresponding      { buf = qtn_dm_log_err_servernotresponding; }
RESOURCE TBUF r_qtn_dm_log_err_uriinvalid               { buf = qtn_dm_log_err_uriinvalid; }
RESOURCE TBUF r_qtn_dm_log_err_comm                     { buf = qtn_dm_log_err_comm; }
RESOURCE TBUF r_qtn_dm_log_err_sessionabort             { buf = qtn_dm_log_err_sessionabort; }
RESOURCE TBUF r_qtn_dm_log_err_offline                  { buf = qtn_offline_not_possible; }
RESOURCE TBUF r_qtn_dm_log_err_timedout                 { buf = qtn_dm_log_err_timedout;}

// Fota specific strings

RESOURCE TBUF r_item_fota_model  { buf = "\t"qtn_fota_list_model"\t%U\t"; }

RESOURCE TBUF r_item_dm_phone_no_model  { buf = "\t"qtn_fota_list_model
												"\t"qtn_dm_list_model_not_available"\t"; }

RESOURCE TBUF r_item_fota_latest_update                 { buf = "\t"qtn_fota_list_latest_update"\t%U\t"; }
RESOURCE TBUF r_item_fota_current_swversion             { buf = "\t"qtn_fota_list_current_version"\t%U\t"; }
RESOURCE TBUF r_item_fota_new_sw_available              { buf = "\t"qtn_fota_list_new_sw_available
                                                                "\t"qtn_fota_list_sw_available"\t"; }
RESOURCE TBUF r_item_fota_download_postponed              { buf = "\t"qtn_fota_list_new_sw_available
                                                                "\t"qtn_fota_list_download_postponed"\t"; }                                                            

RESOURCE TBUF r_item_fota_default_server               { buf = "\t"qtn_fota_setting_default_server"\t\t%U"; }
RESOURCE TBUF r_hdr_fota_default_server                { buf = qtn_fota_setting_default_server; }

RESOURCE TBUF r_qtn_fota_title_settings_dialog          { buf = qtn_fota_title_update_settings; }
RESOURCE TBUF r_qtn_fota_not_updated                    { buf = qtn_fota_list_not_updated; }
RESOURCE TBUF r_qtn_fota_profile_always_ask             { buf = qtn_fota_setting_value_always_ask; }
RESOURCE TBUF r_qtn_fota_list_query_select_server_profile { buf = qtn_fota_list_query_select_server; }

RESOURCE TBUF r_qtn_fota_connection_needed              { buf = qtn_fota_conf_query_connection_is_needed; }

// Strings on tabs
RESOURCE TBUF r_qtn_dm_tab_phone_updates                { buf = qtn_dm_tab_phone_updates; }
RESOURCE TBUF r_qtn_dm_tab_profiles                     { buf = qtn_dm_tab_profiles; }


// Used in the sync handler class, which is not variated.
RESOURCE TBUF r_qtn_fota_wait_checking_update           { buf = qtn_fota_wait_checking_update; }
RESOURCE TBUF r_qtn_fota_no_new_updates                 { buf = qtn_fota_no_new_updates; }
RESOURCE TBUF r_cp_app_title                            { buf = qtn_apps_updates_title;}

//----------------------------------------------------
//   
//    r_sml_bearer_type
//    Texts for connection type setting item
//
//----------------------------------------------------  
//
RESOURCE ARRAY r_sml_bearer_type
  {
  items=
    {
    STRING { text = qtn_sml_set_http ; },
    STRING { text = qtn_sml_set_bluetooth ; }
    };
  }

//----------------------------------------------------
//   
//    r_nsml_yesno_type
//    Texts for boolean type setting item (active)
//
//----------------------------------------------------  
//
RESOURCE ARRAY r_nsml_yesno_type
  {
  items=
    {
    STRING { text = qtn_dm_set_active_value_false ; },
    STRING { text = qtn_dm_set_active_value_true ; }
    };
  }

//----------------------------------------------------
//   
//    r_nsml_accept_yesno_type
//    Texts for boolean type setting item (accept)
//
//----------------------------------------------------  
//
RESOURCE ARRAY r_nsml_accept_yesno_type
  {
  items=
    {
    STRING { text = qtn_dm_set_accepted_value_false ; },
    STRING { text = qtn_dm_set_accepted_value_true ; }
    };
  }

//----------------------------------------------------
//   
//    r_nsml_https_active_yesno_type
//    Texts for boolean type setting item (accept)
//
//----------------------------------------------------  
//
RESOURCE ARRAY r_nsml_https_active_yesno_type
  {
  items=
    {
    STRING { text = qtn_dm_set_https_value_no ; },
    STRING { text = qtn_dm_set_https_value_yes ; }
    };
  }

//----------------------------------------------------
//   
//    r_sml_settings_items
//    Texts for settings dialog item list
//
//----------------------------------------------------  
//
RESOURCE ARRAY r_sml_settings_items
  {
  items=
    {
    STRING    { text = qtn_dm_set_lbl_server_name; },
    STRING    { text = qtn_dm_set_lbl_server_id; },
    STRING    { text = qtn_dm_set_lbl_server_password; },
    STRING    { text = qtn_dm_set_lbl_connection_type; },
    STRING    { text = qtn_dm_set_lbl_access_point; },
    STRING    { text = qtn_dm_set_lbl_host_address; },
    STRING    { text = qtn_dm_set_lbl_server_port; },
    STRING    { text = qtn_dm_set_lbl_dm_username; },
    STRING    { text = qtn_dm_set_lbl_dm_password; },
    STRING    { text = qtn_dm_set_lbl_active; },
    STRING    { text = qtn_dm_set_lbl_accepted; },
    STRING    { text = qtn_dm_set_lbl_https_active; },
    STRING    { text = qtn_dm_set_lbl_https_username; },
    STRING    { text = qtn_dm_set_lbl_https_password; }
    };
  }

//----------------------------------------------------
//   
//    r_sml_settings_items
//    Texts for Log view
//
//----------------------------------------------------  
//
RESOURCE ARRAY r_sml_log_items
  {
  items=
    {
    STRING    { text = qtn_dm_log_profile_name; },
    STRING    { text = qtn_dm_log_remote_server; },
    STRING    { text = qtn_dm_log_date; },
    STRING    { text = qtn_dm_log_time; },
    STRING    { text = qtn_dm_log_remote_status; }
    };
  }

//----------------------------------------------------
//   
//    r_sml_settings_items
//    Texts for settings dialog item list
//
//----------------------------------------------------  
//
RESOURCE TBUF r_qtn_dm_error_untrusted_cert                      { buf = qtn_dm_log_err_untrusted_certificate; }


RESOURCE TBUF r_qtn_fota_list_release                          { buf = "\t"qtn_fota_list_release"\t%U\t"; }
RESOURCE TBUF r_qtn_fota_list_software_version                 { buf = "\t"qtn_fota_list_sw_version"\t%U\t"; }
RESOURCE TBUF r_qtn_fota_list_software_version_date            { buf = "\t"qtn_fota_list_sw_version_date"\t%U\t"; }
RESOURCE TBUF r_qtn_fota_list_language_version                 { buf = "\t"qtn_fota_list_language"\t%U\t"; }
RESOURCE TBUF r_qtn_fota_list_customsw_version                 { buf =  "\t"qtn_fota_list_custom_version"\t%U\t"; }
RESOURCE TBUF r_qtn_fota_list_customswdate_version             { buf = "\t"qtn_fota_list_custom_version_date"\t%U\t"; }
RESOURCE TBUF r_qtn_fota_list_type_designator                  { buf = "\t"qtn_fota_list_type_designator"\t%U\t"; }
RESOURCE TBUF r_qtn_product_code                               { buf = "\t"qtn_dm_list_product_code"\t%U\t"; }
RESOURCE TBUF r_qtn_browser_version                            { buf = "\t"qtn_dm_list_browser_version"\t%U\t"; }
RESOURCE TBUF r_qtn_java_version                               { buf = "\t"qtn_dm_list_java_version"\t%U\t"; }
RESOURCE TBUF r_qtn_flash_version                              { buf = "\t"qtn_dm_list_flash_version"\t%U\t"; }


// End of File
