/*
* Copyright (c) 2007 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource file
*
*/


NAME DDAP

#include <eikon.rh>

#include <avkon.rh>
#include <avkon.rsg>

#include <appinfo.rh>
#include <avkon.loc>
#include <avkon.mbg>
#include <avkon.rsg>
#include <AvkonIcons.hrh>
#include <bldvariant.hrh>
#include <avkon.hrh>

#include <data_caging_paths_strings.hrh>
#include <uikon.rh>


#include "devdiagapp.hrh"
#include <devdiagapp.loc>

// ---------------------------------------------------------
//   
//    Define the resource file signature 
//    This resource should be empty.
//
// ---------------------------------------------------------
//
RESOURCE RSS_SIGNATURE { }

// ---------------------------------------------------------
//   
//    Default Document Name
//
// ---------------------------------------------------------
//
RESOURCE TBUF r_default_document_name { buf=""; }

// ---------------------------------------------------------
//   
//    Define default menu and CBA key.
//
// ---------------------------------------------------------
//
RESOURCE EIK_APP_INFO
    {
    menubar = r_dd_menubar_diagnostics_view;
    cba = r_dd_softkeys_options_back;
    }

RESOURCE TBUF r_gs_diagnostics_view_caption
    {
    buf = qtn_diag_diagnostics_title;
    }



RESOURCE TITLE_PANE r_gs_csd_view_title
    {
    txt = qtn_diag_diagnostics_title;
    }


RESOURCE CBA r_dd_softkeys_options_back_open
    {
    buttons =
        {
        CBA_BUTTON 
            {
            id=EAknSoftkeyOptions; 
            txt = text_softkey_option;
            },
        CBA_BUTTON 
            {
            id=EAknSoftkeyBack; 
            txt = text_softkey_back; 
            },
        CBA_BUTTON 
            {
            id=EDDCmdOpen; 
            txt = qtn_msk_open;
            }
        };
    }
 

 RESOURCE CBA r_dd_softkeys_options_back
    {
    buttons =
        {
        CBA_BUTTON 
            {
            id=EAknSoftkeyOptions; 
            txt = text_softkey_option;
            },
        CBA_BUTTON 
            {
            id=EAknSoftkeyBack; 
            txt = text_softkey_back; 
            },
        CBA_BUTTON 
            { 
            id = EAknSoftkeyContextOptions; 
            txt = text_softkey_option; 
            }   
            
        };
    }

RESOURCE AVKON_VIEW r_gs_dd_view
    {
    menubar = r_dd_menubar_diagnostics_view;
    cba = r_dd_softkeys_options_back_open;
    }

RESOURCE AVKON_VIEW r_dd_hw_plugin_view
    {
    menubar = r_dd_menubar_hw_plugin;
    cba = r_dd_softkeys_options_back;
    }

RESOURCE AVKON_VIEW r_dd_connectivity_plugin_view
    {
    menubar = r_dd_menubar_connectivity_plugin;
    cba = r_dd_softkeys_options_back;
    }

RESOURCE AVKON_VIEW r_dd_service_plugin_view
    {
    menubar = r_dd_menubar_service_plugin;
    cba = r_dd_softkeys_options_back;
    }

RESOURCE AVKON_VIEW r_dd_coverage_plugin_view
    {
    menubar = r_dd_menubar_coverage_plugin;
    cba = r_dd_softkeys_options_back;
    }

RESOURCE MENU_BAR r_dd_hw_context_menubar
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menupane_hw_context;    txt = ""; }
      };
  }
  
RESOURCE MENU_BAR r_dd_connectivity_context_menubar
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menupane_connectivity_context;    txt = ""; }
      };
  } 
  
 RESOURCE MENU_BAR r_dd_service_context_menubar
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menupane_service_context;    txt = ""; }
      };
  } 
  
  RESOURCE MENU_BAR r_dd_coverage_context_menubar
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menupane_coverage_context;    txt = ""; }
      };
  }  

RESOURCE MENU_BAR r_dd_menubar_diagnostics_view
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menu_diagnostics_view;    txt = ""; }
      };
  }


RESOURCE MENU_BAR r_dd_menubar_hw_plugin
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menupane_plugin;    txt = ""; },
      MENU_TITLE { menu_pane = r_dd_menupane_hw_context;    txt = ""; }
      };
  }

RESOURCE MENU_BAR r_dd_menubar_connectivity_plugin
  {
  titles =
      {     
      MENU_TITLE { menu_pane = r_dd_menupane_plugin;     txt = ""; },
      MENU_TITLE { menu_pane = r_dd_menupane_connectivity_context;    txt = ""; }
      };
  }

RESOURCE MENU_BAR r_dd_menubar_service_plugin
  {
  titles =
      {      
      MENU_TITLE { menu_pane =  r_dd_menupane_plugin;    txt = ""; },
      MENU_TITLE { menu_pane =  r_dd_menupane_service_context;    txt = ""; }
      };
  }

RESOURCE MENU_BAR r_dd_menubar_coverage_plugin
  {
  titles =
      {
      MENU_TITLE { menu_pane = r_dd_menupane_plugin;    txt = ""; },
      MENU_TITLE { menu_pane = r_dd_menupane_coverage_context;    txt = ""; }
      };
  }
  
  
RESOURCE MENU_PANE r_dd_menupane_plugin	
    {
    items =
        {
    	MENU_ITEM { command = EDDMenuCmdMainHelp; 	  txt = qtn_options_help; },
        MENU_ITEM { command = EEikCmdExit;          	  txt = qtn_options_exit; }       
        };
    }

RESOURCE MENU_PANE r_dd_menupane_hw_context
    {
    items =
        {
        MENU_ITEM { command = EDDCmdPerformSingle;        txt = qtn_diag_options_perform_test; },
        MENU_ITEM { command = EDDCmdPerformAllHwTests;    txt = qtn_diag_options_perform_hardware_tests; } 
        };
    }

RESOURCE MENU_PANE r_dd_menupane_connectivity_context
    {
    items =
        {
       MENU_ITEM { command = EDDCmdPerformSingle;        txt = qtn_diag_options_perform_test; }
      // MENU_ITEM { command = EDDCmdPerformAllConnTests;  txt = qtn_diag_options_perform_connectivity_tests; } 

        };
    }



RESOURCE MENU_PANE r_dd_menupane_service_context
    {
    items =
        {
        MENU_ITEM { command = EDDCmdPerformSingle;           txt = qtn_diag_options_perform_test; }
       // MENU_ITEM { command = EDDCmdPerformAllServiceTests;  txt = qtn_diag_options_perform_services_tests; }
        };
    }

RESOURCE MENU_PANE r_dd_menupane_coverage_context
    {
    items =
        {
        MENU_ITEM { command = EDDCmdPerformSingle;            txt = qtn_diag_options_perform_test; },
        MENU_ITEM { command = EDDCmdPerformAllCoverageTests;  txt = qtn_diag_options_perform_coverage_tests; }
        };
    }


RESOURCE MENU_PANE r_dd_menu_diagnostics_view	
    {
    items =
        {
        MENU_ITEM { command = EDDCmdOpen;               txt = qtn_options_open; },
        MENU_ITEM { command = EDDCmdPerformAllTests;    txt = qtn_diag_options_perform_all_tests; },
    	MENU_ITEM { command = EDDMenuCmdMainHelp; 	txt = qtn_options_help; },
        MENU_ITEM { command = EEikCmdExit;          	txt = qtn_options_exit; }
       
        };
    }


RESOURCE DIALOG r_message_query_perform_all_hw_tests
   {
   flags = EGeneralQueryFlags;
   buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
   items=
      {
      DLG_LINE 
         {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
          control = AVKON_HEADING
           {
           label = qtn_diag_msg_title_perform_all_hardware_tests;
           headinglayout = 0;
           };
         },
      DLG_LINE
         {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
            {
            message = qtn_diag_msg_perform_all_hardware_tests;
            };
         }
      };
   }

RESOURCE DIALOG r_message_query_perform_all_tests
   {
   flags = EGeneralQueryFlags;
   buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
   items=
      {
      DLG_LINE 
         {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
          control = AVKON_HEADING
           {
           label = qtn_diag_msg_title_perform_all_tests;
           headinglayout = 0;
           };
         },
      DLG_LINE
         {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
            {
            message = qtn_diag_msg_perform_all_tests;
            };
         }
      };
   }


RESOURCE DIALOG r_message_query_perform_all_coverage_tests
   {
   flags = EGeneralQueryFlags;
   buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
   items=
      {
      DLG_LINE 
         {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
          control = AVKON_HEADING
           {
           label = qtn_diag_msg_title_perform_all_coverage_tests;
           headinglayout = 0;
           };
         },
      DLG_LINE
         {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
            {
            message = qtn_diag_msg_perform_all_coverage_tests;
            };
         }
      };
   }

RESOURCE DIALOG r_devdiag_execute_crashed_test_dialog
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
    items =
        {
        DLG_LINE
            {
            type = EAknCtQuery;
            id = EGeneralQuery;
            control = AVKON_CONFIRMATION_QUERY
                {                
                layout = EConfirmationQueryLayout;
                animation = R_QGN_NOTE_QUERY_ANIM;
                };
            }
        };
    }

RESOURCE DIALOG r_devdiag_execute_crashed_test_messagequery_dialog
   {
   flags = EGeneralQueryFlags;
   buttons = R_AVKON_SOFTKEYS_YES_NO__YES;
   items=
      {
      DLG_LINE 
         {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
          control = AVKON_HEADING
           {           
           headinglayout = 0;
           };
         },
      DLG_LINE
         {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
            {            
            };
         }
      };
   }    


RESOURCE DIALOG r_devdiag_failed_tests_messagequery_dialog
   {
   flags = EGeneralQueryFlags;
   buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
   items=
      {
      DLG_LINE 
         {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
          control = AVKON_HEADING
           {           
           label = qtn_diag_msg_title_test_results;
           headinglayout = 0;
           };
         },
      DLG_LINE
         {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
            {            
            };
         }
      };
   }    

// ---------------------------------------------------------------------------
// r_dev_diag_preparing_wait_note
// The dialog to inform the user that loading of the plug-ins takes some time.
// ---------------------------------------------------------------------------
//
RESOURCE DIALOG r_dev_diag_preparing_wait_note
    {
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_EMPTY;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EDevDiagApplicationWaitNote;
            control = AVKON_NOTE
                {
                layout = EWaitLayout;
                singular_label = qtn_diag_wait_note_loading_test;
                imagefile = "\\resource\\apps\\avkon2.mbm";
                imageid = EMbmAvkonQgn_note_progress;
                imagemask = EMbmAvkonQgn_note_progress_mask;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }
    
// ADO & Platformization Changes   
RESOURCE DIALOG r_message_query_help_note
   {
   flags = EGeneralQueryFlags;
   buttons = R_AVKON_SOFTKEYS_OK_CANCEL;
   items=
      {
      DLG_LINE 
         {
         type = EAknCtPopupHeadingPane;
         id = EAknMessageQueryHeaderId;
          control = AVKON_HEADING
           {
           label = qtn_diag_msg_title_help;
           headinglayout = 0;
           };
         },
      DLG_LINE
         {
         type = EAknCtMessageQuery;
         id = EAknMessageQueryContentId;
         control = AVKON_MESSAGE_QUERY
            {
            message = qtn_diag_msg_help;
            };
         }
      };
   }
   
 // changes ends

// ---------------------------------------------------------------------------
// r_devdiag_low_disk_dialog
// The dialog to inform the user that they do not have enough disk space to
// run tests at this time.
// ---------------------------------------------------------------------------
//
RESOURCE DIALOG r_devdiag_low_disk_dialog
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_OK_EMPTY__OK;
    items =
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                label = qtn_diag_err_title_memory_low;
                headinglayout = 0;
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                message = qtn_diag_err_memory_low;
                };
            }
        };
    }

// ---------------------------------------------------------------------------
// r_devdiag_low_battery_dialog
// The dialog to inform the user that they do not have enough battery to run
// tests at this time.
// ---------------------------------------------------------------------------
//
RESOURCE DIALOG r_devdiag_low_battery_dialog
    {
    flags = EGeneralQueryFlags;
    buttons = R_AVKON_SOFTKEYS_OK_EMPTY__OK;
    items =
        {
        DLG_LINE
            {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            control = AVKON_HEADING
                {
                label = qtn_diag_err_title_battery_low;
                headinglayout = 0;
                };
            },
        DLG_LINE
            {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
                {
                message = qtn_diag_err_battery_low;
                };
            }
        };
    }


// ---------------------------------------------------------------------------
// r_devdiag_cancel_list_query
// Query cancel mode from the user. It is possible to cancel one or all tests.
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_LIST_QUERY r_devdiag_cancel_list_query
    {
    flags = EGeneralQueryFlags;
    softkeys = R_AVKON_SOFTKEYS_OK_CANCEL;
    items =
        {
        AVKON_LIST_QUERY_DLG_LINE
            {
            control = AVKON_LIST_QUERY_CONTROL
                {
                listtype = EAknCtSinglePopupMenuListBox;
                listbox = AVKON_LIST_QUERY_LIST
                    {
                    array_id = r_devdiag_cancel_listquery_options;
                    };
                heading = qtn_diag_list_query_cancel;
                };
            }
        };
    }
    

// ---------------------------------------------------------------------------
// r_devdiag_cancel_listquery_options
// Cancel option texts.
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_devdiag_cancel_listquery_options
    {
    items =
        {
        LBUF {txt = qtn_diag_list_query_cancel_selected; },
        LBUF {txt = qtn_diag_list_query_cancel_rest; }    
        };
    }


// ---------------------------------------------------------------------------
// r_devdiag_cancel_list_query
// Query skip mode from the user. It is possible to skip one or all tests.
// ---------------------------------------------------------------------------
//
RESOURCE AVKON_LIST_QUERY r_devdiag_skip_list_query
    {
    flags = EGeneralQueryFlags;
    softkeys = R_AVKON_SOFTKEYS_OK_CANCEL;
    items =
        {
        AVKON_LIST_QUERY_DLG_LINE
            {
            control = AVKON_LIST_QUERY_CONTROL
                {
                listtype = EAknCtSinglePopupMenuListBox;
                listbox = AVKON_LIST_QUERY_LIST
                    {
                    array_id = r_devdiag_skip_listquery_options;
                    };
                heading = qtn_diag_list_query_skip;
                };
            }
        };
    }
    

// ---------------------------------------------------------------------------
// r_devdiag_skip_listquery_options
// Skip option texts.
// ---------------------------------------------------------------------------
//
RESOURCE ARRAY r_devdiag_skip_listquery_options
    {
    items =
        {
        LBUF {txt = qtn_diag_list_query_skip_selected; },
        LBUF {txt = qtn_diag_list_query_skip_rest; }    
        };
    }

RESOURCE TBUF r_diag_title_hardware                      { buf = qtn_diag_title_hardware; }

RESOURCE TBUF r_diag_title_connectivity                  { buf = qtn_diag_title_connectivity; }
	
RESOURCE TBUF r_diag_title_service                       { buf = qtn_diag_title_services; }

RESOURCE TBUF r_diag_title_coverage                      { buf = qtn_diag_title_coverage; }

RESOURCE TBUF r_diag_list_not_performed                  { buf = qtn_diag_list_not_performed; }

RESOURCE TBUF r_diag_lst_test_pass                       { buf = qtn_diag_lst_test_pass; }

RESOURCE TBUF r_diag_lst_test_failed                     { buf = qtn_diag_lst_test_failed; }

RESOURCE TBUF r_diag_lst_test_ongoing                     { buf = qtn_diag_lst_test_ongoing; }

RESOURCE TBUF r_diag_conf_test_passed                     { buf = qtn_diag_conf_test_passed; }

RESOURCE TBUF r_diag_conf_test_failed                     { buf = qtn_diag_conf_test_failed; }

RESOURCE TBUF r_diag_conf_query_after_crash               { buf = qtn_diag_conf_query_after_crash; }
// ADO ,Platformization & UI Spec Changes
RESOURCE TBUF r_diag_conf_test_passed_1                     { buf = qtn_diag_conf_test_passed_1; }

RESOURCE TBUF r_diag_conf_test_failed_1                     { buf = qtn_diag_conf_test_failed_1; }
