/*
* Copyright (c) 2007 Nokia Corporation and/or its subsidiary(-ies). 
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:  Resource file for DiagInternalMemoryPlugin
*
*/



//  RESOURCE IDENTIFIER
NAME    DGIM // 4 letter ID

//  INCLUDES
#include    "diaginternalmemoryplugin.hrh"
#include    <diaginternalmemoryplugin.loc>

#include    <avkon.loc>
#include    <avkon.mbg>
#include    <avkon.rsg>
#include    <avkon.rh>

#include    <AvkonIcons.hrh>
#include    <bldvariant.hrh>
#include    <data_caging_paths_strings.hrh>
#include    <eikcore.rsg>
#include    <eikon.rsg>
#include    <uikon.rh>
#include    <eikon.rh>

// CONSTANTS

//  RESOURCE DEFINITIONS

RESOURCE RSS_SIGNATURE
    {
    }

RESOURCE TBUF
    {
    buf="DGIM";
    }

//----------------------------------------------------
//  r_diag_lst_internal_memory
//
// Internal Memory Plugin Caption 
//----------------------------------------------------
//
RESOURCE TBUF r_diag_lst_internal_memory
    {
    buf = qtn_diag_lst_internal_memory;
    }

//----------------------------------------------------
//  r_qtn_diag_lst_test_internal_memory
//
// Internal Memory Plugin Text 
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_diag_lst_test_internal_memory
    {
    buf = qtn_diag_lst_test_internal_memory;
    }
    

//----------------------------------------------------
//  r_qtn_diag_msg_title_internal_memory
//
// Internal Memory Plugin Text 
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_diag_msg_title_internal_memory
    {
    buf = qtn_diag_msg_title_internal_memory;
    }

//----------------------------------------------------
//  r_qtn_diag_msg_info_internal_memory
//
// Internal Memory Plugin Text 
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_diag_msg_info_internal_memory
    {
    buf = qtn_diag_conf_test_failed_internal_memory;
    }

//----------------------------------------------------
//  r_qtn_diag_title_test_internal_memory
//
// Internal Memory Plugin Text 
//----------------------------------------------------
//
RESOURCE TBUF r_qtn_diag_title_test_internal_memory
    {
    buf = qtn_diag_title_test_internal_memory;
    }

//----------------------------------------------------
// r_memory_softkeys_ok_skip
//----------------------------------------------------
//
RESOURCE CBA r_int_memory_softkeys_ok_skip
    {
    buttons = 
        {
         CBA_BUTTON 
            { 
            id  = EAknSoftkeyOk; 
            txt = text_softkey_ok;
            },
        CBA_BUTTON 
            { 
            id  = ECBACmdSkip;       // .hrh 
            txt = qtn_diag_softk_skip;  // .rls or .loc
            }       
        };
    }
    

// ADO & Platformization Changes
//----------------------------------------------------
// r_memory_softkeys_ok_skip
//----------------------------------------------------
//
RESOURCE CBA r_int_memory_softkeys_ok_cancel
    {
    buttons = 
        {
         CBA_BUTTON 
            { 
            id  = EAknSoftkeyOk; 
            txt = text_softkey_ok;
            },
        CBA_BUTTON 
            { 
            id  = ECBACmdCancel;       // .hrh 
            txt = text_softkey_cancel;  
            }       
        };
    }

//----------------------------------------------------
// r_memorytest_description
//
// Memory test description dialog
//----------------------------------------------------
//
RESOURCE DIALOG r_messagequery_title_internalmemory // ADO & Platformization Changes
    {
    flags   = EGeneralQueryFlags;    
    buttons = r_int_memory_softkeys_ok_skip; // ADO & Platformization Changes
    items =
        {
        DLG_LINE
             {
             type = EAknCtPopupHeadingPane;
             id   = EAknMessageQueryHeaderId;

             control = AVKON_HEADING
                 {              
                    label = qtn_diag_msg_title_internal_memory;
                    headinglayout = R_AVKON_WML_SIGN_QUERY_HEADING_PANE;
                 };
             },
    
        DLG_LINE
            {
            type = EAknCtMessageQuery;   // avkon.hrh
            id   = EAknMessageQueryContentId; // .hrh
            control = AVKON_MESSAGE_QUERY // avkon.hrh
                {
                message   = qtn_diag_msg_info_internal_memory;          // .loc
                };
            }
        };
    }

	//----------------------------------------------------
//  r_extmem_softkeys_stop__cancel
//
// Buttons shown during the test. Shown when the
// test is run as a part of a suite.
//----------------------------------------------------
//
RESOURCE CBA r_intmem_softkeys_cancel
    {
    buttons = 
        {
       CBA_BUTTON 
	        { 
            id  = EAknSoftkeyEmpty; 
            txt = text_softkey_empty;
	        },

        CBA_BUTTON 
	        { 
            id  = ECBACmdCancel;      // .hrh 
            txt = text_softkey_cancel; // .rls or .loc
	        } 

	
        };
    }
	
RESOURCE DIALOG r_intmem_plugin_wait_note
    {
    flags = EAknWaitNoteFlags | EEikDialogFlagNotifyEsc;
    //buttons = R_AVKON_SOFTKEYS_EMPTY;
	buttons = r_intmem_softkeys_cancel;
    items =
        {
        DLG_LINE
            {
            type = EAknCtNote;
            id = EYBWaitNoteId;
            control= AVKON_NOTE 
                { 
                layout = EWaitLayout;
                singular_label = qtn_diag_msg_testing_internal_memory;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
                };
            }
        };
    }
//End of File
